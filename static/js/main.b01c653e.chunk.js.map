{"version":3,"sources":["DropdownItem.tsx","data/people.ts","Autocomplete.tsx","utils/functions.tsx","App.tsx","index.tsx"],"names":["DropdownItem","person","onSelect","selectedPerson","handlePersonClick","className","cn","slug","sex","type","onClick","name","peopleFromServer","born","died","fatherName","motherName","Autocomplete","setSelectedPerson","useState","query","setQuery","debouncedQuery","setDebouncedQuery","isListShown","setIsListShown","applyDebounceQuery","useCallback","debounce","filteredPeople","useMemo","people","preparedQuery","trim","toLowerCase","filter","includes","search","placeholder","value","onChange","event","newQuery","target","onFocus","role","length","map","App","ReactDOM","render","document","getElementById"],"mappings":"qOAWaA,EAAgC,SAAC,GAKvC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,eACAC,EACI,EADJA,kBAEA,OACE,qBACEC,UAAWC,IAAG,gBACZ,CACE,6BACgB,OAAdH,QAAc,IAAdA,OAAA,EAAAA,EAAgBI,QAASN,EAAOM,OAJxC,SAQE,mBACEF,UAAWC,IAAG,CACZ,gBAAgC,MAAfL,EAAOO,IACxB,kBAAkC,MAAfP,EAAOO,MAH9B,SAME,wBACEC,KAAK,SACLJ,UAAU,WACVK,QAAS,WACPR,EAASD,GACTG,EAAkBH,EACnB,EANH,SAQGA,EAAOU,UAhBPV,EAAOM,KAqBjB,EC3CYK,EAA6B,CACxC,CACED,KAAM,oBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZT,KAAM,0BAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZT,KAAM,yBAER,CACEI,KAAM,iBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZT,KAAM,uBAER,CACEI,KAAM,kBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZT,KAAM,wBAER,CACEI,KAAM,sBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZT,KAAM,4BAER,CACEI,KAAM,wBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZT,KAAM,8BAER,CACEI,KAAM,wBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZT,KAAM,8BAER,CACEI,KAAM,kBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZT,KAAM,wBAER,CACEI,KAAM,kBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZT,KAAM,wBAER,CACEI,KAAM,wBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZT,KAAM,8BAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZT,KAAM,yBAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZT,KAAM,yBAER,CACEI,KAAM,2BACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZT,KAAM,iCAER,CACEI,KAAM,uBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZT,KAAM,6BAER,CACEI,KAAM,wBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZT,KAAM,8BAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZT,KAAM,yBAER,CACEI,KAAM,0BACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZT,KAAM,gCAER,CACEI,KAAM,oBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZT,KAAM,0BAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZT,KAAM,yBAER,CACEI,KAAM,sBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZT,KAAM,4BAER,CACEI,KAAM,gBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZT,KAAM,sBAER,CACEI,KAAM,2BACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZT,KAAM,iCAER,CACEI,KAAM,iBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZT,KAAM,uBAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZT,KAAM,yBAER,CACEI,KAAM,iBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZT,KAAM,uBAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZT,KAAM,yBAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZT,KAAM,yBAER,CACEI,KAAM,kBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZT,KAAM,wBAER,CACEI,KAAM,yBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZT,KAAM,+BAER,CACEI,KAAM,kBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZT,KAAM,wBAER,CACEI,KAAM,uBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZT,KAAM,6BAER,CACEI,KAAM,iBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZT,KAAM,uBAER,CACEI,KAAM,sBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZT,KAAM,4BAER,CACEI,KAAM,kBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZT,KAAM,wBAER,CACEI,KAAM,mBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZT,KAAM,yBAER,CACEI,KAAM,gBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZT,KAAM,sBAER,CACEI,KAAM,iBACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZT,KAAM,uBAER,CACEI,KAAM,cACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZT,KAAM,oBAER,CACEI,KAAM,gCACNH,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZT,KAAM,uCCnVGU,EAAgC,SAAC,GAGvC,IAFLd,EAEI,EAFJA,eACAe,EACI,EADJA,kBAEA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAqBC,sBACzBC,mBAASL,EAAmB,KAC5B,IAGIM,EAAiBC,mBAAQ,WAC7B,OCzBkB,SAACC,EAAkBX,GACvC,IAAMY,EAAgBZ,EAAMa,OAAOC,cAEnC,OAAOH,EACJI,QAAO,SAAAlC,GAAM,OAAIA,EAAOU,KAAKuB,cAAcE,SAASJ,EAAvC,GACjB,CDoBUK,CAAOzB,EAAkBQ,EACjC,GAAE,CAACE,IAEEpB,EAAW,SAACD,GAChBiB,EAAkBjB,GAClBwB,GAAe,EAChB,EAaKrB,EAAoB,SAACH,GACzBiB,EAAkBjB,GAClBoB,EAASpB,EAAOU,MAChBY,EAAkB,GACnB,EAED,OACE,sBAAKlB,UAAWC,IAAG,WAAY,CAAE,YAAakB,IAA9C,UACE,qBAAKnB,UAAU,mBAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,uBACEI,KAAK,OACL6B,YAAY,2BACZjC,UAAU,QACVkC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OA1BOC,EA0BsBD,EAAME,OAAOJ,MAzB5DlB,EAASqB,QACThB,EAAmBgB,GAFK,IAACA,CA0BP,EACVE,QAAS,kBAAMnB,GAAe,EAArB,IAGVL,GACC,sBAAMf,UAAU,gBAAhB,SACE,wBACEI,KAAK,SACLJ,UAAU,SACV,aAAW,QACXK,QA/BW,WACvBW,EAAS,IACTE,EAAkB,IAClBL,EAAkB,KACnB,WAkCIM,GACC,qBAAKnB,UAAU,gBAAgBwC,KAAK,OAApC,SACE,qBAAKxC,UAAU,mBAAf,SACGwB,EAAeiB,OACdjB,EAAekB,KAAI,SAAA9C,GAAM,OACvB,cAAC,EAAD,CACEA,OAAQA,EACRE,eAAgBA,EAEhBD,SAAUA,EACVE,kBAAmBA,GAFdH,EAAOM,KAJS,IAUzB,mBAAGF,UAAU,gBAAb,2CAOb,EE7FY2C,EAAgB,WAC3B,MAA4C7B,mBAAwB,MAApE,mBAAOhB,EAAP,KAAuBe,EAAvB,KAEA,OACE,uBAAMb,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGF,EAEG,8BACG,UAAGA,EAAeQ,MAAlB,YACQR,EAAeU,KADvB,cACiCV,EAAeW,KADhD,OAIH,uBAGN,cAAC,EAAD,CACEX,eAAgBA,EAChBe,kBAAmBA,MAI1B,ECxBD+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.b01c653e.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Person } from './types/Person';\n\ntype Props = {\n  person: Person,\n  selectedPerson: Person | null,\n  handlePersonClick: (person: Person) => void,\n  onSelect: (person: Person) => void,\n};\n\nexport const DropdownItem: React.FC<Props> = ({\n  person,\n  onSelect,\n  selectedPerson,\n  handlePersonClick,\n}) => {\n  return (\n    <div\n      className={cn('dropdown-item',\n        {\n          'has-background-link-light':\n            selectedPerson?.slug === person.slug,\n        })}\n      key={person.slug}\n    >\n      <p\n        className={cn({\n          'has-text-link': person.sex === 'm',\n          'has-text-danger': person.sex === 'f',\n        })}\n      >\n        <button\n          type=\"button\"\n          className=\"selector\"\n          onClick={() => {\n            onSelect(person);\n            handlePersonClick(person);\n          }}\n        >\n          {person.name}\n        </button>\n      </p>\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useCallback, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { debounce } from 'lodash';\nimport { Person } from './types/Person';\nimport { DropdownItem } from './DropdownItem';\nimport { peopleFromServer } from './data/people';\nimport { search } from './utils/functions';\n\ntype Props = {\n  selectedPerson: Person | null,\n  setSelectedPerson: (arg: Person | null) => void;\n};\n\nexport const Autocomplete: React.FC<Props> = ({\n  selectedPerson,\n  setSelectedPerson,\n}) => {\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [isListShown, setIsListShown] = useState(false);\n\n  const applyDebounceQuery = useCallback(\n    debounce(setDebouncedQuery, 1000),\n    [],\n  );\n\n  const filteredPeople = useMemo(() => {\n    return search(peopleFromServer, query);\n  }, [debouncedQuery]);\n\n  const onSelect = (person: Person) => {\n    setSelectedPerson(person);\n    setIsListShown(false);\n  };\n\n  const handleQueryChange = (newQuery: string) => {\n    setQuery(newQuery);\n    applyDebounceQuery(newQuery);\n  };\n\n  const handleResetQuery = () => {\n    setQuery('');\n    setDebouncedQuery('');\n    setSelectedPerson(null);\n  };\n\n  const handlePersonClick = (person: Person) => {\n    setSelectedPerson(person);\n    setQuery(person.name);\n    setDebouncedQuery('');\n  };\n\n  return (\n    <div className={cn('dropdown', { 'is-active': isListShown })}>\n      <div className=\"dropdown-trigger\">\n        <div className=\"control has-icons-right\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onChange={(event) => handleQueryChange(event.target.value)}\n            onFocus={() => setIsListShown(true)}\n          />\n\n          {query && (\n            <span className=\"icon is-right\">\n              <button\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"close\"\n                onClick={handleResetQuery}\n              />\n            </span>\n          )}\n        </div>\n      </div>\n\n      {isListShown && (\n        <div className=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {filteredPeople.length ? (\n              filteredPeople.map(person => (\n                <DropdownItem\n                  person={person}\n                  selectedPerson={selectedPerson}\n                  key={person.slug}\n                  onSelect={onSelect}\n                  handlePersonClick={handlePersonClick}\n                />\n              ))\n            ) : (\n              <p className=\"dropdown-item\">No matching suggestions</p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const search = (people: Person[], query: string) => {\n  const preparedQuery = query.trim().toLowerCase();\n\n  return people\n    .filter(person => person.name.toLowerCase().includes(preparedQuery));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Person } from './types/Person';\nimport { Autocomplete } from './Autocomplete';\n\nexport const App: React.FC = () => {\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson\n          ? (\n            <div>\n              {`${selectedPerson.name}`\n                + ` (${selectedPerson.born} - ${selectedPerson.died})`}\n            </div>\n          )\n          : 'No selected person'}\n      </h1>\n\n      <Autocomplete\n        selectedPerson={selectedPerson}\n        setSelectedPerson={setSelectedPerson}\n      />\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}